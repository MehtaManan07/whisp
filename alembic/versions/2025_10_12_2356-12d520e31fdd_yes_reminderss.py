"""yes-reminderss

Revision ID: 12d520e31fdd
Revises: 26ad5ab4d8c3
Create Date: 2025-10-12 23:56:12.407854

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '12d520e31fdd'
down_revision: Union[str, Sequence[str], None] = '26ad5ab4d8c3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reminders',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reminder_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('recurrence_type', sa.String(length=20), nullable=False),
    sa.Column('recurrence_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('next_trigger_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reminders_id'), 'reminders', ['id'], unique=False)
    op.create_index(op.f('ix_reminders_is_active'), 'reminders', ['is_active'], unique=False)
    op.create_index(op.f('ix_reminders_next_trigger_at'), 'reminders', ['next_trigger_at'], unique=False)
    op.create_index(op.f('ix_reminders_reminder_type'), 'reminders', ['reminder_type'], unique=False)
    op.create_index(op.f('ix_reminders_user_id'), 'reminders', ['user_id'], unique=False)
    op.drop_index(op.f('ix_vendor_map_category_id'), table_name='vendor_map')
    op.drop_index(op.f('ix_vendor_map_id'), table_name='vendor_map')
    op.drop_index(op.f('ix_vendor_map_vendor_name'), table_name='vendor_map')
    op.drop_table('vendor_map')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vendor_map',
    sa.Column('vendor_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('vendor_map_category_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('vendor_map_pkey'))
    )
    op.create_index(op.f('ix_vendor_map_vendor_name'), 'vendor_map', ['vendor_name'], unique=True)
    op.create_index(op.f('ix_vendor_map_id'), 'vendor_map', ['id'], unique=False)
    op.create_index(op.f('ix_vendor_map_category_id'), 'vendor_map', ['category_id'], unique=False)
    op.drop_index(op.f('ix_reminders_user_id'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_reminder_type'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_next_trigger_at'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_is_active'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_id'), table_name='reminders')
    op.drop_table('reminders')
    # ### end Alembic commands ###
